# coding: utf-8

"""
    Bumbal Client Api

    Bumbal API documentation  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: gerb@bumbal.eu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from bumbal.configuration import Configuration


class ZoneModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'name': 'str',
        'filter_tag_names': 'list[str]',
        'filter_tags': 'object',
        'links': 'list[LinkModel]',
        'meta_data': 'list[MetaDataModel]',
        'zone_ranges': 'list[ZoneRangeModel]',
        'brands': 'list[BrandModel]',
        'zone_created_at': 'datetime',
        'zone_updated_at': 'datetime',
        'zone_created_by': 'int',
        'zone_updated_by': 'int'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'filter_tag_names': 'filter_tag_names',
        'filter_tags': 'filter_tags',
        'links': 'links',
        'meta_data': 'meta_data',
        'zone_ranges': 'zone_ranges',
        'brands': 'brands',
        'zone_created_at': 'zone_created_at',
        'zone_updated_at': 'zone_updated_at',
        'zone_created_by': 'zone_created_by',
        'zone_updated_by': 'zone_updated_by'
    }

    def __init__(self, id=None, name=None, filter_tag_names=None, filter_tags=None, links=None, meta_data=None, zone_ranges=None, brands=None, zone_created_at=None, zone_updated_at=None, zone_created_by=None, zone_updated_by=None, _configuration=None):  # noqa: E501
        """ZoneModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._id = None
        self._name = None
        self._filter_tag_names = None
        self._filter_tags = None
        self._links = None
        self._meta_data = None
        self._zone_ranges = None
        self._brands = None
        self._zone_created_at = None
        self._zone_updated_at = None
        self._zone_created_by = None
        self._zone_updated_by = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if filter_tag_names is not None:
            self.filter_tag_names = filter_tag_names
        if filter_tags is not None:
            self.filter_tags = filter_tags
        if links is not None:
            self.links = links
        if meta_data is not None:
            self.meta_data = meta_data
        if zone_ranges is not None:
            self.zone_ranges = zone_ranges
        if brands is not None:
            self.brands = brands
        if zone_created_at is not None:
            self.zone_created_at = zone_created_at
        if zone_updated_at is not None:
            self.zone_updated_at = zone_updated_at
        if zone_created_by is not None:
            self.zone_created_by = zone_created_by
        if zone_updated_by is not None:
            self.zone_updated_by = zone_updated_by

    @property
    def id(self):
        """Gets the id of this ZoneModel.  # noqa: E501

        Unique ID  # noqa: E501

        :return: The id of this ZoneModel.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ZoneModel.

        Unique ID  # noqa: E501

        :param id: The id of this ZoneModel.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ZoneModel.  # noqa: E501

        Zone Name  # noqa: E501

        :return: The name of this ZoneModel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ZoneModel.

        Zone Name  # noqa: E501

        :param name: The name of this ZoneModel.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def filter_tag_names(self):
        """Gets the filter_tag_names of this ZoneModel.  # noqa: E501

        Tag names  # noqa: E501

        :return: The filter_tag_names of this ZoneModel.  # noqa: E501
        :rtype: list[str]
        """
        return self._filter_tag_names

    @filter_tag_names.setter
    def filter_tag_names(self, filter_tag_names):
        """Sets the filter_tag_names of this ZoneModel.

        Tag names  # noqa: E501

        :param filter_tag_names: The filter_tag_names of this ZoneModel.  # noqa: E501
        :type: list[str]
        """

        self._filter_tag_names = filter_tag_names

    @property
    def filter_tags(self):
        """Gets the filter_tags of this ZoneModel.  # noqa: E501

          # noqa: E501

        :return: The filter_tags of this ZoneModel.  # noqa: E501
        :rtype: object
        """
        return self._filter_tags

    @filter_tags.setter
    def filter_tags(self, filter_tags):
        """Sets the filter_tags of this ZoneModel.

          # noqa: E501

        :param filter_tags: The filter_tags of this ZoneModel.  # noqa: E501
        :type: object
        """

        self._filter_tags = filter_tags

    @property
    def links(self):
        """Gets the links of this ZoneModel.  # noqa: E501

          # noqa: E501

        :return: The links of this ZoneModel.  # noqa: E501
        :rtype: list[LinkModel]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ZoneModel.

          # noqa: E501

        :param links: The links of this ZoneModel.  # noqa: E501
        :type: list[LinkModel]
        """

        self._links = links

    @property
    def meta_data(self):
        """Gets the meta_data of this ZoneModel.  # noqa: E501

          # noqa: E501

        :return: The meta_data of this ZoneModel.  # noqa: E501
        :rtype: list[MetaDataModel]
        """
        return self._meta_data

    @meta_data.setter
    def meta_data(self, meta_data):
        """Sets the meta_data of this ZoneModel.

          # noqa: E501

        :param meta_data: The meta_data of this ZoneModel.  # noqa: E501
        :type: list[MetaDataModel]
        """

        self._meta_data = meta_data

    @property
    def zone_ranges(self):
        """Gets the zone_ranges of this ZoneModel.  # noqa: E501

          # noqa: E501

        :return: The zone_ranges of this ZoneModel.  # noqa: E501
        :rtype: list[ZoneRangeModel]
        """
        return self._zone_ranges

    @zone_ranges.setter
    def zone_ranges(self, zone_ranges):
        """Sets the zone_ranges of this ZoneModel.

          # noqa: E501

        :param zone_ranges: The zone_ranges of this ZoneModel.  # noqa: E501
        :type: list[ZoneRangeModel]
        """

        self._zone_ranges = zone_ranges

    @property
    def brands(self):
        """Gets the brands of this ZoneModel.  # noqa: E501

          # noqa: E501

        :return: The brands of this ZoneModel.  # noqa: E501
        :rtype: list[BrandModel]
        """
        return self._brands

    @brands.setter
    def brands(self, brands):
        """Sets the brands of this ZoneModel.

          # noqa: E501

        :param brands: The brands of this ZoneModel.  # noqa: E501
        :type: list[BrandModel]
        """

        self._brands = brands

    @property
    def zone_created_at(self):
        """Gets the zone_created_at of this ZoneModel.  # noqa: E501

        created_at date time  # noqa: E501

        :return: The zone_created_at of this ZoneModel.  # noqa: E501
        :rtype: datetime
        """
        return self._zone_created_at

    @zone_created_at.setter
    def zone_created_at(self, zone_created_at):
        """Sets the zone_created_at of this ZoneModel.

        created_at date time  # noqa: E501

        :param zone_created_at: The zone_created_at of this ZoneModel.  # noqa: E501
        :type: datetime
        """

        self._zone_created_at = zone_created_at

    @property
    def zone_updated_at(self):
        """Gets the zone_updated_at of this ZoneModel.  # noqa: E501

        updated_at date time  # noqa: E501

        :return: The zone_updated_at of this ZoneModel.  # noqa: E501
        :rtype: datetime
        """
        return self._zone_updated_at

    @zone_updated_at.setter
    def zone_updated_at(self, zone_updated_at):
        """Sets the zone_updated_at of this ZoneModel.

        updated_at date time  # noqa: E501

        :param zone_updated_at: The zone_updated_at of this ZoneModel.  # noqa: E501
        :type: datetime
        """

        self._zone_updated_at = zone_updated_at

    @property
    def zone_created_by(self):
        """Gets the zone_created_by of this ZoneModel.  # noqa: E501

        created_by user id  # noqa: E501

        :return: The zone_created_by of this ZoneModel.  # noqa: E501
        :rtype: int
        """
        return self._zone_created_by

    @zone_created_by.setter
    def zone_created_by(self, zone_created_by):
        """Sets the zone_created_by of this ZoneModel.

        created_by user id  # noqa: E501

        :param zone_created_by: The zone_created_by of this ZoneModel.  # noqa: E501
        :type: int
        """

        self._zone_created_by = zone_created_by

    @property
    def zone_updated_by(self):
        """Gets the zone_updated_by of this ZoneModel.  # noqa: E501

        created_by user id  # noqa: E501

        :return: The zone_updated_by of this ZoneModel.  # noqa: E501
        :rtype: int
        """
        return self._zone_updated_by

    @zone_updated_by.setter
    def zone_updated_by(self, zone_updated_by):
        """Sets the zone_updated_by of this ZoneModel.

        created_by user id  # noqa: E501

        :param zone_updated_by: The zone_updated_by of this ZoneModel.  # noqa: E501
        :type: int
        """

        self._zone_updated_by = zone_updated_by

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ZoneModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ZoneModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ZoneModel):
            return True

        return self.to_dict() != other.to_dict()
