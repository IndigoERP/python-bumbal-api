# coding: utf-8

"""
    Bumbal Client Api

    Bumbal API documentation  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: gerb@bumbal.eu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from bumbal.configuration import Configuration


class SettingsGetConstantsReversedResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'irregularity_category': 'object',
        'irregularity_cause': 'object',
        'instruction_type': 'object',
        'reference_type': 'object',
        'relation_type': 'object',
        'week_day': 'object',
        'action_type': 'object',
        'activity_type': 'object',
        'special_activity': 'object',
        'ae_activity': 'object',
        'address_type': 'object',
        'ae_address_type': 'object',
        'communication_delivery_method': 'object',
        'communication_message_type': 'object',
        'counter': 'object',
        'equipment_type': 'object',
        'file_type': 'object',
        'incoterm': 'object',
        'log_type': 'object',
        'object_type': 'object',
        'optimisation_objective': 'object',
        'party_type': 'object',
        'phone_nr_type': 'object',
        'recurrence_period': 'object',
        'recurrence_type': 'object',
        'role': 'object',
        'saywhen_status': 'object',
        'settings': 'object',
        'settings_group': 'object',
        'status_type': 'object',
        'route_status': 'object',
        'activity_status': 'object',
        'shipment_status': 'object',
        'package_line_status': 'object',
        'assignment_status': 'object',
        'message_status': 'object',
        'user_status': 'object',
        'job_status': 'object',
        'api_request_status': 'object',
        'system_provider': 'object',
        'provider': 'object',
        'time_slot_type': 'object',
        'transaction_type': 'object',
        'uom': 'object',
        'uom_group': 'object',
        'vehicle_type': 'object',
        'package_type': 'object'
    }

    attribute_map = {
        'irregularity_category': 'irregularity_category',
        'irregularity_cause': 'irregularity_cause',
        'instruction_type': 'instruction_type',
        'reference_type': 'reference_type',
        'relation_type': 'relation_type',
        'week_day': 'week_day',
        'action_type': 'action_type',
        'activity_type': 'activity_type',
        'special_activity': 'special_activity',
        'ae_activity': 'ae_activity',
        'address_type': 'address_type',
        'ae_address_type': 'ae_address_type',
        'communication_delivery_method': 'communication_delivery_method',
        'communication_message_type': 'communication_message_type',
        'counter': 'counter',
        'equipment_type': 'equipment_type',
        'file_type': 'file_type',
        'incoterm': 'incoterm',
        'log_type': 'log_type',
        'object_type': 'object_type',
        'optimisation_objective': 'optimisation_objective',
        'party_type': 'party_type',
        'phone_nr_type': 'phone_nr_type',
        'recurrence_period': 'recurrence_period',
        'recurrence_type': 'recurrence_type',
        'role': 'role',
        'saywhen_status': 'saywhen_status',
        'settings': 'settings',
        'settings_group': 'settings_group',
        'status_type': 'status_type',
        'route_status': 'route_status',
        'activity_status': 'activity_status',
        'shipment_status': 'shipment_status',
        'package_line_status': 'package_line_status',
        'assignment_status': 'assignment_status',
        'message_status': 'message_status',
        'user_status': 'user_status',
        'job_status': 'job_status',
        'api_request_status': 'api_request_status',
        'system_provider': 'system_provider',
        'provider': 'provider',
        'time_slot_type': 'time_slot_type',
        'transaction_type': 'transaction_type',
        'uom': 'uom',
        'uom_group': 'uom_group',
        'vehicle_type': 'vehicle_type',
        'package_type': 'package_type'
    }

    def __init__(self, irregularity_category=None, irregularity_cause=None, instruction_type=None, reference_type=None, relation_type=None, week_day=None, action_type=None, activity_type=None, special_activity=None, ae_activity=None, address_type=None, ae_address_type=None, communication_delivery_method=None, communication_message_type=None, counter=None, equipment_type=None, file_type=None, incoterm=None, log_type=None, object_type=None, optimisation_objective=None, party_type=None, phone_nr_type=None, recurrence_period=None, recurrence_type=None, role=None, saywhen_status=None, settings=None, settings_group=None, status_type=None, route_status=None, activity_status=None, shipment_status=None, package_line_status=None, assignment_status=None, message_status=None, user_status=None, job_status=None, api_request_status=None, system_provider=None, provider=None, time_slot_type=None, transaction_type=None, uom=None, uom_group=None, vehicle_type=None, package_type=None, _configuration=None):  # noqa: E501
        """SettingsGetConstantsReversedResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._irregularity_category = None
        self._irregularity_cause = None
        self._instruction_type = None
        self._reference_type = None
        self._relation_type = None
        self._week_day = None
        self._action_type = None
        self._activity_type = None
        self._special_activity = None
        self._ae_activity = None
        self._address_type = None
        self._ae_address_type = None
        self._communication_delivery_method = None
        self._communication_message_type = None
        self._counter = None
        self._equipment_type = None
        self._file_type = None
        self._incoterm = None
        self._log_type = None
        self._object_type = None
        self._optimisation_objective = None
        self._party_type = None
        self._phone_nr_type = None
        self._recurrence_period = None
        self._recurrence_type = None
        self._role = None
        self._saywhen_status = None
        self._settings = None
        self._settings_group = None
        self._status_type = None
        self._route_status = None
        self._activity_status = None
        self._shipment_status = None
        self._package_line_status = None
        self._assignment_status = None
        self._message_status = None
        self._user_status = None
        self._job_status = None
        self._api_request_status = None
        self._system_provider = None
        self._provider = None
        self._time_slot_type = None
        self._transaction_type = None
        self._uom = None
        self._uom_group = None
        self._vehicle_type = None
        self._package_type = None
        self.discriminator = None

        if irregularity_category is not None:
            self.irregularity_category = irregularity_category
        if irregularity_cause is not None:
            self.irregularity_cause = irregularity_cause
        if instruction_type is not None:
            self.instruction_type = instruction_type
        if reference_type is not None:
            self.reference_type = reference_type
        if relation_type is not None:
            self.relation_type = relation_type
        if week_day is not None:
            self.week_day = week_day
        if action_type is not None:
            self.action_type = action_type
        if activity_type is not None:
            self.activity_type = activity_type
        if special_activity is not None:
            self.special_activity = special_activity
        if ae_activity is not None:
            self.ae_activity = ae_activity
        if address_type is not None:
            self.address_type = address_type
        if ae_address_type is not None:
            self.ae_address_type = ae_address_type
        if communication_delivery_method is not None:
            self.communication_delivery_method = communication_delivery_method
        if communication_message_type is not None:
            self.communication_message_type = communication_message_type
        if counter is not None:
            self.counter = counter
        if equipment_type is not None:
            self.equipment_type = equipment_type
        if file_type is not None:
            self.file_type = file_type
        if incoterm is not None:
            self.incoterm = incoterm
        if log_type is not None:
            self.log_type = log_type
        if object_type is not None:
            self.object_type = object_type
        if optimisation_objective is not None:
            self.optimisation_objective = optimisation_objective
        if party_type is not None:
            self.party_type = party_type
        if phone_nr_type is not None:
            self.phone_nr_type = phone_nr_type
        if recurrence_period is not None:
            self.recurrence_period = recurrence_period
        if recurrence_type is not None:
            self.recurrence_type = recurrence_type
        if role is not None:
            self.role = role
        if saywhen_status is not None:
            self.saywhen_status = saywhen_status
        if settings is not None:
            self.settings = settings
        if settings_group is not None:
            self.settings_group = settings_group
        if status_type is not None:
            self.status_type = status_type
        if route_status is not None:
            self.route_status = route_status
        if activity_status is not None:
            self.activity_status = activity_status
        if shipment_status is not None:
            self.shipment_status = shipment_status
        if package_line_status is not None:
            self.package_line_status = package_line_status
        if assignment_status is not None:
            self.assignment_status = assignment_status
        if message_status is not None:
            self.message_status = message_status
        if user_status is not None:
            self.user_status = user_status
        if job_status is not None:
            self.job_status = job_status
        if api_request_status is not None:
            self.api_request_status = api_request_status
        if system_provider is not None:
            self.system_provider = system_provider
        if provider is not None:
            self.provider = provider
        if time_slot_type is not None:
            self.time_slot_type = time_slot_type
        if transaction_type is not None:
            self.transaction_type = transaction_type
        if uom is not None:
            self.uom = uom
        if uom_group is not None:
            self.uom_group = uom_group
        if vehicle_type is not None:
            self.vehicle_type = vehicle_type
        if package_type is not None:
            self.package_type = package_type

    @property
    def irregularity_category(self):
        """Gets the irregularity_category of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Irregularity Categories  # noqa: E501

        :return: The irregularity_category of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._irregularity_category

    @irregularity_category.setter
    def irregularity_category(self, irregularity_category):
        """Sets the irregularity_category of this SettingsGetConstantsReversedResponse.

        Irregularity Categories  # noqa: E501

        :param irregularity_category: The irregularity_category of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._irregularity_category = irregularity_category

    @property
    def irregularity_cause(self):
        """Gets the irregularity_cause of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Irregularity Causes  # noqa: E501

        :return: The irregularity_cause of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._irregularity_cause

    @irregularity_cause.setter
    def irregularity_cause(self, irregularity_cause):
        """Sets the irregularity_cause of this SettingsGetConstantsReversedResponse.

        Irregularity Causes  # noqa: E501

        :param irregularity_cause: The irregularity_cause of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._irregularity_cause = irregularity_cause

    @property
    def instruction_type(self):
        """Gets the instruction_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Instruction Types  # noqa: E501

        :return: The instruction_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._instruction_type

    @instruction_type.setter
    def instruction_type(self, instruction_type):
        """Sets the instruction_type of this SettingsGetConstantsReversedResponse.

        Instruction Types  # noqa: E501

        :param instruction_type: The instruction_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._instruction_type = instruction_type

    @property
    def reference_type(self):
        """Gets the reference_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Reference Types  # noqa: E501

        :return: The reference_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._reference_type

    @reference_type.setter
    def reference_type(self, reference_type):
        """Sets the reference_type of this SettingsGetConstantsReversedResponse.

        Reference Types  # noqa: E501

        :param reference_type: The reference_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._reference_type = reference_type

    @property
    def relation_type(self):
        """Gets the relation_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Relation Types  # noqa: E501

        :return: The relation_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._relation_type

    @relation_type.setter
    def relation_type(self, relation_type):
        """Sets the relation_type of this SettingsGetConstantsReversedResponse.

        Relation Types  # noqa: E501

        :param relation_type: The relation_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._relation_type = relation_type

    @property
    def week_day(self):
        """Gets the week_day of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Names of the days in the week  # noqa: E501

        :return: The week_day of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._week_day

    @week_day.setter
    def week_day(self, week_day):
        """Sets the week_day of this SettingsGetConstantsReversedResponse.

        Names of the days in the week  # noqa: E501

        :param week_day: The week_day of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._week_day = week_day

    @property
    def action_type(self):
        """Gets the action_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Action Types  # noqa: E501

        :return: The action_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._action_type

    @action_type.setter
    def action_type(self, action_type):
        """Sets the action_type of this SettingsGetConstantsReversedResponse.

        Action Types  # noqa: E501

        :param action_type: The action_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._action_type = action_type

    @property
    def activity_type(self):
        """Gets the activity_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Activity Types  # noqa: E501

        :return: The activity_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._activity_type

    @activity_type.setter
    def activity_type(self, activity_type):
        """Sets the activity_type of this SettingsGetConstantsReversedResponse.

        Activity Types  # noqa: E501

        :param activity_type: The activity_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._activity_type = activity_type

    @property
    def special_activity(self):
        """Gets the special_activity of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Special Activities  # noqa: E501

        :return: The special_activity of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._special_activity

    @special_activity.setter
    def special_activity(self, special_activity):
        """Sets the special_activity of this SettingsGetConstantsReversedResponse.

        Special Activities  # noqa: E501

        :param special_activity: The special_activity of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._special_activity = special_activity

    @property
    def ae_activity(self):
        """Gets the ae_activity of this SettingsGetConstantsReversedResponse.  # noqa: E501

        EA Activity  # noqa: E501

        :return: The ae_activity of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._ae_activity

    @ae_activity.setter
    def ae_activity(self, ae_activity):
        """Sets the ae_activity of this SettingsGetConstantsReversedResponse.

        EA Activity  # noqa: E501

        :param ae_activity: The ae_activity of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._ae_activity = ae_activity

    @property
    def address_type(self):
        """Gets the address_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Address Types  # noqa: E501

        :return: The address_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._address_type

    @address_type.setter
    def address_type(self, address_type):
        """Sets the address_type of this SettingsGetConstantsReversedResponse.

        Address Types  # noqa: E501

        :param address_type: The address_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._address_type = address_type

    @property
    def ae_address_type(self):
        """Gets the ae_address_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        EA Address Types  # noqa: E501

        :return: The ae_address_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._ae_address_type

    @ae_address_type.setter
    def ae_address_type(self, ae_address_type):
        """Sets the ae_address_type of this SettingsGetConstantsReversedResponse.

        EA Address Types  # noqa: E501

        :param ae_address_type: The ae_address_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._ae_address_type = ae_address_type

    @property
    def communication_delivery_method(self):
        """Gets the communication_delivery_method of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Communication Delivery Methods  # noqa: E501

        :return: The communication_delivery_method of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._communication_delivery_method

    @communication_delivery_method.setter
    def communication_delivery_method(self, communication_delivery_method):
        """Sets the communication_delivery_method of this SettingsGetConstantsReversedResponse.

        Communication Delivery Methods  # noqa: E501

        :param communication_delivery_method: The communication_delivery_method of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._communication_delivery_method = communication_delivery_method

    @property
    def communication_message_type(self):
        """Gets the communication_message_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Communication Message Types  # noqa: E501

        :return: The communication_message_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._communication_message_type

    @communication_message_type.setter
    def communication_message_type(self, communication_message_type):
        """Sets the communication_message_type of this SettingsGetConstantsReversedResponse.

        Communication Message Types  # noqa: E501

        :param communication_message_type: The communication_message_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._communication_message_type = communication_message_type

    @property
    def counter(self):
        """Gets the counter of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Counters  # noqa: E501

        :return: The counter of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this SettingsGetConstantsReversedResponse.

        Counters  # noqa: E501

        :param counter: The counter of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._counter = counter

    @property
    def equipment_type(self):
        """Gets the equipment_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Equipment Types  # noqa: E501

        :return: The equipment_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._equipment_type

    @equipment_type.setter
    def equipment_type(self, equipment_type):
        """Sets the equipment_type of this SettingsGetConstantsReversedResponse.

        Equipment Types  # noqa: E501

        :param equipment_type: The equipment_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._equipment_type = equipment_type

    @property
    def file_type(self):
        """Gets the file_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        File Types  # noqa: E501

        :return: The file_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._file_type

    @file_type.setter
    def file_type(self, file_type):
        """Sets the file_type of this SettingsGetConstantsReversedResponse.

        File Types  # noqa: E501

        :param file_type: The file_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._file_type = file_type

    @property
    def incoterm(self):
        """Gets the incoterm of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Incoterms  # noqa: E501

        :return: The incoterm of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._incoterm

    @incoterm.setter
    def incoterm(self, incoterm):
        """Sets the incoterm of this SettingsGetConstantsReversedResponse.

        Incoterms  # noqa: E501

        :param incoterm: The incoterm of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._incoterm = incoterm

    @property
    def log_type(self):
        """Gets the log_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Log Types  # noqa: E501

        :return: The log_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._log_type

    @log_type.setter
    def log_type(self, log_type):
        """Sets the log_type of this SettingsGetConstantsReversedResponse.

        Log Types  # noqa: E501

        :param log_type: The log_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._log_type = log_type

    @property
    def object_type(self):
        """Gets the object_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Object Types  # noqa: E501

        :return: The object_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this SettingsGetConstantsReversedResponse.

        Object Types  # noqa: E501

        :param object_type: The object_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._object_type = object_type

    @property
    def optimisation_objective(self):
        """Gets the optimisation_objective of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Optimisation Objectives  # noqa: E501

        :return: The optimisation_objective of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._optimisation_objective

    @optimisation_objective.setter
    def optimisation_objective(self, optimisation_objective):
        """Sets the optimisation_objective of this SettingsGetConstantsReversedResponse.

        Optimisation Objectives  # noqa: E501

        :param optimisation_objective: The optimisation_objective of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._optimisation_objective = optimisation_objective

    @property
    def party_type(self):
        """Gets the party_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Party Types  # noqa: E501

        :return: The party_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._party_type

    @party_type.setter
    def party_type(self, party_type):
        """Sets the party_type of this SettingsGetConstantsReversedResponse.

        Party Types  # noqa: E501

        :param party_type: The party_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._party_type = party_type

    @property
    def phone_nr_type(self):
        """Gets the phone_nr_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Phone NR Types  # noqa: E501

        :return: The phone_nr_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._phone_nr_type

    @phone_nr_type.setter
    def phone_nr_type(self, phone_nr_type):
        """Sets the phone_nr_type of this SettingsGetConstantsReversedResponse.

        Phone NR Types  # noqa: E501

        :param phone_nr_type: The phone_nr_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._phone_nr_type = phone_nr_type

    @property
    def recurrence_period(self):
        """Gets the recurrence_period of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Recurrence Periods  # noqa: E501

        :return: The recurrence_period of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._recurrence_period

    @recurrence_period.setter
    def recurrence_period(self, recurrence_period):
        """Sets the recurrence_period of this SettingsGetConstantsReversedResponse.

        Recurrence Periods  # noqa: E501

        :param recurrence_period: The recurrence_period of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._recurrence_period = recurrence_period

    @property
    def recurrence_type(self):
        """Gets the recurrence_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Recurrence Types  # noqa: E501

        :return: The recurrence_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._recurrence_type

    @recurrence_type.setter
    def recurrence_type(self, recurrence_type):
        """Sets the recurrence_type of this SettingsGetConstantsReversedResponse.

        Recurrence Types  # noqa: E501

        :param recurrence_type: The recurrence_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._recurrence_type = recurrence_type

    @property
    def role(self):
        """Gets the role of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Roles  # noqa: E501

        :return: The role of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this SettingsGetConstantsReversedResponse.

        Roles  # noqa: E501

        :param role: The role of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._role = role

    @property
    def saywhen_status(self):
        """Gets the saywhen_status of this SettingsGetConstantsReversedResponse.  # noqa: E501

        SayWhen Statuses  # noqa: E501

        :return: The saywhen_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._saywhen_status

    @saywhen_status.setter
    def saywhen_status(self, saywhen_status):
        """Sets the saywhen_status of this SettingsGetConstantsReversedResponse.

        SayWhen Statuses  # noqa: E501

        :param saywhen_status: The saywhen_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._saywhen_status = saywhen_status

    @property
    def settings(self):
        """Gets the settings of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Settings  # noqa: E501

        :return: The settings of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this SettingsGetConstantsReversedResponse.

        Settings  # noqa: E501

        :param settings: The settings of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._settings = settings

    @property
    def settings_group(self):
        """Gets the settings_group of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Settings Groups  # noqa: E501

        :return: The settings_group of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._settings_group

    @settings_group.setter
    def settings_group(self, settings_group):
        """Sets the settings_group of this SettingsGetConstantsReversedResponse.

        Settings Groups  # noqa: E501

        :param settings_group: The settings_group of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._settings_group = settings_group

    @property
    def status_type(self):
        """Gets the status_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Status Types  # noqa: E501

        :return: The status_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._status_type

    @status_type.setter
    def status_type(self, status_type):
        """Sets the status_type of this SettingsGetConstantsReversedResponse.

        Status Types  # noqa: E501

        :param status_type: The status_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._status_type = status_type

    @property
    def route_status(self):
        """Gets the route_status of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Route Statuses  # noqa: E501

        :return: The route_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._route_status

    @route_status.setter
    def route_status(self, route_status):
        """Sets the route_status of this SettingsGetConstantsReversedResponse.

        Route Statuses  # noqa: E501

        :param route_status: The route_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._route_status = route_status

    @property
    def activity_status(self):
        """Gets the activity_status of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Activity Statuses  # noqa: E501

        :return: The activity_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._activity_status

    @activity_status.setter
    def activity_status(self, activity_status):
        """Sets the activity_status of this SettingsGetConstantsReversedResponse.

        Activity Statuses  # noqa: E501

        :param activity_status: The activity_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._activity_status = activity_status

    @property
    def shipment_status(self):
        """Gets the shipment_status of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Shipment Statuses  # noqa: E501

        :return: The shipment_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._shipment_status

    @shipment_status.setter
    def shipment_status(self, shipment_status):
        """Sets the shipment_status of this SettingsGetConstantsReversedResponse.

        Shipment Statuses  # noqa: E501

        :param shipment_status: The shipment_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._shipment_status = shipment_status

    @property
    def package_line_status(self):
        """Gets the package_line_status of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Package Line Statuses  # noqa: E501

        :return: The package_line_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._package_line_status

    @package_line_status.setter
    def package_line_status(self, package_line_status):
        """Sets the package_line_status of this SettingsGetConstantsReversedResponse.

        Package Line Statuses  # noqa: E501

        :param package_line_status: The package_line_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._package_line_status = package_line_status

    @property
    def assignment_status(self):
        """Gets the assignment_status of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Assignment Statuses  # noqa: E501

        :return: The assignment_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._assignment_status

    @assignment_status.setter
    def assignment_status(self, assignment_status):
        """Sets the assignment_status of this SettingsGetConstantsReversedResponse.

        Assignment Statuses  # noqa: E501

        :param assignment_status: The assignment_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._assignment_status = assignment_status

    @property
    def message_status(self):
        """Gets the message_status of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Message Statuses  # noqa: E501

        :return: The message_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._message_status

    @message_status.setter
    def message_status(self, message_status):
        """Sets the message_status of this SettingsGetConstantsReversedResponse.

        Message Statuses  # noqa: E501

        :param message_status: The message_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._message_status = message_status

    @property
    def user_status(self):
        """Gets the user_status of this SettingsGetConstantsReversedResponse.  # noqa: E501

        User Statuses  # noqa: E501

        :return: The user_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._user_status

    @user_status.setter
    def user_status(self, user_status):
        """Sets the user_status of this SettingsGetConstantsReversedResponse.

        User Statuses  # noqa: E501

        :param user_status: The user_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._user_status = user_status

    @property
    def job_status(self):
        """Gets the job_status of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Job Statuses  # noqa: E501

        :return: The job_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._job_status

    @job_status.setter
    def job_status(self, job_status):
        """Sets the job_status of this SettingsGetConstantsReversedResponse.

        Job Statuses  # noqa: E501

        :param job_status: The job_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._job_status = job_status

    @property
    def api_request_status(self):
        """Gets the api_request_status of this SettingsGetConstantsReversedResponse.  # noqa: E501

        API Request Statuses  # noqa: E501

        :return: The api_request_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._api_request_status

    @api_request_status.setter
    def api_request_status(self, api_request_status):
        """Sets the api_request_status of this SettingsGetConstantsReversedResponse.

        API Request Statuses  # noqa: E501

        :param api_request_status: The api_request_status of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._api_request_status = api_request_status

    @property
    def system_provider(self):
        """Gets the system_provider of this SettingsGetConstantsReversedResponse.  # noqa: E501

        System Providers  # noqa: E501

        :return: The system_provider of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._system_provider

    @system_provider.setter
    def system_provider(self, system_provider):
        """Sets the system_provider of this SettingsGetConstantsReversedResponse.

        System Providers  # noqa: E501

        :param system_provider: The system_provider of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._system_provider = system_provider

    @property
    def provider(self):
        """Gets the provider of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Providers  # noqa: E501

        :return: The provider of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this SettingsGetConstantsReversedResponse.

        Providers  # noqa: E501

        :param provider: The provider of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._provider = provider

    @property
    def time_slot_type(self):
        """Gets the time_slot_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Time Slot Types  # noqa: E501

        :return: The time_slot_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._time_slot_type

    @time_slot_type.setter
    def time_slot_type(self, time_slot_type):
        """Sets the time_slot_type of this SettingsGetConstantsReversedResponse.

        Time Slot Types  # noqa: E501

        :param time_slot_type: The time_slot_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._time_slot_type = time_slot_type

    @property
    def transaction_type(self):
        """Gets the transaction_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Transaction Types  # noqa: E501

        :return: The transaction_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._transaction_type

    @transaction_type.setter
    def transaction_type(self, transaction_type):
        """Sets the transaction_type of this SettingsGetConstantsReversedResponse.

        Transaction Types  # noqa: E501

        :param transaction_type: The transaction_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._transaction_type = transaction_type

    @property
    def uom(self):
        """Gets the uom of this SettingsGetConstantsReversedResponse.  # noqa: E501

        UOM  # noqa: E501

        :return: The uom of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._uom

    @uom.setter
    def uom(self, uom):
        """Sets the uom of this SettingsGetConstantsReversedResponse.

        UOM  # noqa: E501

        :param uom: The uom of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._uom = uom

    @property
    def uom_group(self):
        """Gets the uom_group of this SettingsGetConstantsReversedResponse.  # noqa: E501

        UOM Groups  # noqa: E501

        :return: The uom_group of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._uom_group

    @uom_group.setter
    def uom_group(self, uom_group):
        """Sets the uom_group of this SettingsGetConstantsReversedResponse.

        UOM Groups  # noqa: E501

        :param uom_group: The uom_group of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._uom_group = uom_group

    @property
    def vehicle_type(self):
        """Gets the vehicle_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Vehicle Types  # noqa: E501

        :return: The vehicle_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._vehicle_type

    @vehicle_type.setter
    def vehicle_type(self, vehicle_type):
        """Sets the vehicle_type of this SettingsGetConstantsReversedResponse.

        Vehicle Types  # noqa: E501

        :param vehicle_type: The vehicle_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._vehicle_type = vehicle_type

    @property
    def package_type(self):
        """Gets the package_type of this SettingsGetConstantsReversedResponse.  # noqa: E501

        Package Types  # noqa: E501

        :return: The package_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :rtype: object
        """
        return self._package_type

    @package_type.setter
    def package_type(self, package_type):
        """Sets the package_type of this SettingsGetConstantsReversedResponse.

        Package Types  # noqa: E501

        :param package_type: The package_type of this SettingsGetConstantsReversedResponse.  # noqa: E501
        :type: object
        """

        self._package_type = package_type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SettingsGetConstantsReversedResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SettingsGetConstantsReversedResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SettingsGetConstantsReversedResponse):
            return True

        return self.to_dict() != other.to_dict()
