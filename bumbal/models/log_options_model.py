# coding: utf-8

"""
    Bumbal Client Api

    Bumbal API documentation  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: gerb@bumbal.eu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from bumbal.configuration import Configuration


class LogOptionsModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'include_message': 'bool',
        'include_timestamp': 'bool',
        'include_full_message': 'bool',
        'include_original_message': 'bool',
        'include_client_ip': 'bool',
        'include_http_method': 'bool',
        'include_api_endpoint': 'bool',
        'include_level_text': 'bool',
        'include_request_id': 'bool',
        'include_channel': 'bool',
        'include_log_type': 'bool',
        'include_user': 'bool'
    }

    attribute_map = {
        'include_message': 'include_message',
        'include_timestamp': 'include_timestamp',
        'include_full_message': 'include_full_message',
        'include_original_message': 'include_original_message',
        'include_client_ip': 'include_client_ip',
        'include_http_method': 'include_http_method',
        'include_api_endpoint': 'include_api_endpoint',
        'include_level_text': 'include_level_text',
        'include_request_id': 'include_request_id',
        'include_channel': 'include_channel',
        'include_log_type': 'include_log_type',
        'include_user': 'include_user'
    }

    def __init__(self, include_message=None, include_timestamp=None, include_full_message=None, include_original_message=None, include_client_ip=None, include_http_method=None, include_api_endpoint=None, include_level_text=None, include_request_id=None, include_channel=None, include_log_type=None, include_user=None, _configuration=None):  # noqa: E501
        """LogOptionsModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._include_message = None
        self._include_timestamp = None
        self._include_full_message = None
        self._include_original_message = None
        self._include_client_ip = None
        self._include_http_method = None
        self._include_api_endpoint = None
        self._include_level_text = None
        self._include_request_id = None
        self._include_channel = None
        self._include_log_type = None
        self._include_user = None
        self.discriminator = None

        if include_message is not None:
            self.include_message = include_message
        if include_timestamp is not None:
            self.include_timestamp = include_timestamp
        if include_full_message is not None:
            self.include_full_message = include_full_message
        if include_original_message is not None:
            self.include_original_message = include_original_message
        if include_client_ip is not None:
            self.include_client_ip = include_client_ip
        if include_http_method is not None:
            self.include_http_method = include_http_method
        if include_api_endpoint is not None:
            self.include_api_endpoint = include_api_endpoint
        if include_level_text is not None:
            self.include_level_text = include_level_text
        if include_request_id is not None:
            self.include_request_id = include_request_id
        if include_channel is not None:
            self.include_channel = include_channel
        if include_log_type is not None:
            self.include_log_type = include_log_type
        if include_user is not None:
            self.include_user = include_user

    @property
    def include_message(self):
        """Gets the include_message of this LogOptionsModel.  # noqa: E501

        Default = true  # noqa: E501

        :return: The include_message of this LogOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_message

    @include_message.setter
    def include_message(self, include_message):
        """Sets the include_message of this LogOptionsModel.

        Default = true  # noqa: E501

        :param include_message: The include_message of this LogOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_message = include_message

    @property
    def include_timestamp(self):
        """Gets the include_timestamp of this LogOptionsModel.  # noqa: E501

        Default = true  # noqa: E501

        :return: The include_timestamp of this LogOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_timestamp

    @include_timestamp.setter
    def include_timestamp(self, include_timestamp):
        """Sets the include_timestamp of this LogOptionsModel.

        Default = true  # noqa: E501

        :param include_timestamp: The include_timestamp of this LogOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_timestamp = include_timestamp

    @property
    def include_full_message(self):
        """Gets the include_full_message of this LogOptionsModel.  # noqa: E501

        Default = false  # noqa: E501

        :return: The include_full_message of this LogOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_full_message

    @include_full_message.setter
    def include_full_message(self, include_full_message):
        """Sets the include_full_message of this LogOptionsModel.

        Default = false  # noqa: E501

        :param include_full_message: The include_full_message of this LogOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_full_message = include_full_message

    @property
    def include_original_message(self):
        """Gets the include_original_message of this LogOptionsModel.  # noqa: E501

        Default = false  # noqa: E501

        :return: The include_original_message of this LogOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_original_message

    @include_original_message.setter
    def include_original_message(self, include_original_message):
        """Sets the include_original_message of this LogOptionsModel.

        Default = false  # noqa: E501

        :param include_original_message: The include_original_message of this LogOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_original_message = include_original_message

    @property
    def include_client_ip(self):
        """Gets the include_client_ip of this LogOptionsModel.  # noqa: E501

        Default = false  # noqa: E501

        :return: The include_client_ip of this LogOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_client_ip

    @include_client_ip.setter
    def include_client_ip(self, include_client_ip):
        """Sets the include_client_ip of this LogOptionsModel.

        Default = false  # noqa: E501

        :param include_client_ip: The include_client_ip of this LogOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_client_ip = include_client_ip

    @property
    def include_http_method(self):
        """Gets the include_http_method of this LogOptionsModel.  # noqa: E501

        Default = false  # noqa: E501

        :return: The include_http_method of this LogOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_http_method

    @include_http_method.setter
    def include_http_method(self, include_http_method):
        """Sets the include_http_method of this LogOptionsModel.

        Default = false  # noqa: E501

        :param include_http_method: The include_http_method of this LogOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_http_method = include_http_method

    @property
    def include_api_endpoint(self):
        """Gets the include_api_endpoint of this LogOptionsModel.  # noqa: E501

        Default = false  # noqa: E501

        :return: The include_api_endpoint of this LogOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_api_endpoint

    @include_api_endpoint.setter
    def include_api_endpoint(self, include_api_endpoint):
        """Sets the include_api_endpoint of this LogOptionsModel.

        Default = false  # noqa: E501

        :param include_api_endpoint: The include_api_endpoint of this LogOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_api_endpoint = include_api_endpoint

    @property
    def include_level_text(self):
        """Gets the include_level_text of this LogOptionsModel.  # noqa: E501

        Default = false  # noqa: E501

        :return: The include_level_text of this LogOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_level_text

    @include_level_text.setter
    def include_level_text(self, include_level_text):
        """Sets the include_level_text of this LogOptionsModel.

        Default = false  # noqa: E501

        :param include_level_text: The include_level_text of this LogOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_level_text = include_level_text

    @property
    def include_request_id(self):
        """Gets the include_request_id of this LogOptionsModel.  # noqa: E501

        Default = false  # noqa: E501

        :return: The include_request_id of this LogOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_request_id

    @include_request_id.setter
    def include_request_id(self, include_request_id):
        """Sets the include_request_id of this LogOptionsModel.

        Default = false  # noqa: E501

        :param include_request_id: The include_request_id of this LogOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_request_id = include_request_id

    @property
    def include_channel(self):
        """Gets the include_channel of this LogOptionsModel.  # noqa: E501

        Default = false  # noqa: E501

        :return: The include_channel of this LogOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_channel

    @include_channel.setter
    def include_channel(self, include_channel):
        """Sets the include_channel of this LogOptionsModel.

        Default = false  # noqa: E501

        :param include_channel: The include_channel of this LogOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_channel = include_channel

    @property
    def include_log_type(self):
        """Gets the include_log_type of this LogOptionsModel.  # noqa: E501

        Default = false  # noqa: E501

        :return: The include_log_type of this LogOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_log_type

    @include_log_type.setter
    def include_log_type(self, include_log_type):
        """Sets the include_log_type of this LogOptionsModel.

        Default = false  # noqa: E501

        :param include_log_type: The include_log_type of this LogOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_log_type = include_log_type

    @property
    def include_user(self):
        """Gets the include_user of this LogOptionsModel.  # noqa: E501

        Default = false  # noqa: E501

        :return: The include_user of this LogOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_user

    @include_user.setter
    def include_user(self, include_user):
        """Sets the include_user of this LogOptionsModel.

        Default = false  # noqa: E501

        :param include_user: The include_user of this LogOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_user = include_user

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(LogOptionsModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LogOptionsModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, LogOptionsModel):
            return True

        return self.to_dict() != other.to_dict()
