# coding: utf-8

"""
    Bumbal Client Api

    Bumbal API documentation  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: gerb@bumbal.eu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from bumbal.configuration import Configuration


class CompartmentModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'nr': 'str',
        'trailer_id': 'int',
        'filled_capacities': 'list[FilledCapacityModel]',
        'trailer_link': 'list[LinkModel]',
        'links': 'list[LinkModel]',
        'meta_data': 'list[MetaDataModel]',
        'compartment_created_by': 'UsersModel',
        'compartment_updated_by': 'UsersModel',
        'compartment_created_at': 'datetime',
        'compartment_updated_at': 'datetime'
    }

    attribute_map = {
        'id': 'id',
        'nr': 'nr',
        'trailer_id': 'trailer_id',
        'filled_capacities': 'filled_capacities',
        'trailer_link': 'trailer_link',
        'links': 'links',
        'meta_data': 'meta_data',
        'compartment_created_by': 'compartment_created_by',
        'compartment_updated_by': 'compartment_updated_by',
        'compartment_created_at': 'compartment_created_at',
        'compartment_updated_at': 'compartment_updated_at'
    }

    def __init__(self, id=None, nr=None, trailer_id=None, filled_capacities=None, trailer_link=None, links=None, meta_data=None, compartment_created_by=None, compartment_updated_by=None, compartment_created_at=None, compartment_updated_at=None, _configuration=None):  # noqa: E501
        """CompartmentModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._id = None
        self._nr = None
        self._trailer_id = None
        self._filled_capacities = None
        self._trailer_link = None
        self._links = None
        self._meta_data = None
        self._compartment_created_by = None
        self._compartment_updated_by = None
        self._compartment_created_at = None
        self._compartment_updated_at = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if nr is not None:
            self.nr = nr
        if trailer_id is not None:
            self.trailer_id = trailer_id
        if filled_capacities is not None:
            self.filled_capacities = filled_capacities
        if trailer_link is not None:
            self.trailer_link = trailer_link
        if links is not None:
            self.links = links
        if meta_data is not None:
            self.meta_data = meta_data
        if compartment_created_by is not None:
            self.compartment_created_by = compartment_created_by
        if compartment_updated_by is not None:
            self.compartment_updated_by = compartment_updated_by
        if compartment_created_at is not None:
            self.compartment_created_at = compartment_created_at
        if compartment_updated_at is not None:
            self.compartment_updated_at = compartment_updated_at

    @property
    def id(self):
        """Gets the id of this CompartmentModel.  # noqa: E501

        Unique Identifier  # noqa: E501

        :return: The id of this CompartmentModel.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CompartmentModel.

        Unique Identifier  # noqa: E501

        :param id: The id of this CompartmentModel.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def nr(self):
        """Gets the nr of this CompartmentModel.  # noqa: E501

        Nr of compartment  # noqa: E501

        :return: The nr of this CompartmentModel.  # noqa: E501
        :rtype: str
        """
        return self._nr

    @nr.setter
    def nr(self, nr):
        """Sets the nr of this CompartmentModel.

        Nr of compartment  # noqa: E501

        :param nr: The nr of this CompartmentModel.  # noqa: E501
        :type: str
        """

        self._nr = nr

    @property
    def trailer_id(self):
        """Gets the trailer_id of this CompartmentModel.  # noqa: E501

          # noqa: E501

        :return: The trailer_id of this CompartmentModel.  # noqa: E501
        :rtype: int
        """
        return self._trailer_id

    @trailer_id.setter
    def trailer_id(self, trailer_id):
        """Sets the trailer_id of this CompartmentModel.

          # noqa: E501

        :param trailer_id: The trailer_id of this CompartmentModel.  # noqa: E501
        :type: int
        """

        self._trailer_id = trailer_id

    @property
    def filled_capacities(self):
        """Gets the filled_capacities of this CompartmentModel.  # noqa: E501

          # noqa: E501

        :return: The filled_capacities of this CompartmentModel.  # noqa: E501
        :rtype: list[FilledCapacityModel]
        """
        return self._filled_capacities

    @filled_capacities.setter
    def filled_capacities(self, filled_capacities):
        """Sets the filled_capacities of this CompartmentModel.

          # noqa: E501

        :param filled_capacities: The filled_capacities of this CompartmentModel.  # noqa: E501
        :type: list[FilledCapacityModel]
        """

        self._filled_capacities = filled_capacities

    @property
    def trailer_link(self):
        """Gets the trailer_link of this CompartmentModel.  # noqa: E501

          # noqa: E501

        :return: The trailer_link of this CompartmentModel.  # noqa: E501
        :rtype: list[LinkModel]
        """
        return self._trailer_link

    @trailer_link.setter
    def trailer_link(self, trailer_link):
        """Sets the trailer_link of this CompartmentModel.

          # noqa: E501

        :param trailer_link: The trailer_link of this CompartmentModel.  # noqa: E501
        :type: list[LinkModel]
        """

        self._trailer_link = trailer_link

    @property
    def links(self):
        """Gets the links of this CompartmentModel.  # noqa: E501

          # noqa: E501

        :return: The links of this CompartmentModel.  # noqa: E501
        :rtype: list[LinkModel]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this CompartmentModel.

          # noqa: E501

        :param links: The links of this CompartmentModel.  # noqa: E501
        :type: list[LinkModel]
        """

        self._links = links

    @property
    def meta_data(self):
        """Gets the meta_data of this CompartmentModel.  # noqa: E501

          # noqa: E501

        :return: The meta_data of this CompartmentModel.  # noqa: E501
        :rtype: list[MetaDataModel]
        """
        return self._meta_data

    @meta_data.setter
    def meta_data(self, meta_data):
        """Sets the meta_data of this CompartmentModel.

          # noqa: E501

        :param meta_data: The meta_data of this CompartmentModel.  # noqa: E501
        :type: list[MetaDataModel]
        """

        self._meta_data = meta_data

    @property
    def compartment_created_by(self):
        """Gets the compartment_created_by of this CompartmentModel.  # noqa: E501

          # noqa: E501

        :return: The compartment_created_by of this CompartmentModel.  # noqa: E501
        :rtype: UsersModel
        """
        return self._compartment_created_by

    @compartment_created_by.setter
    def compartment_created_by(self, compartment_created_by):
        """Sets the compartment_created_by of this CompartmentModel.

          # noqa: E501

        :param compartment_created_by: The compartment_created_by of this CompartmentModel.  # noqa: E501
        :type: UsersModel
        """

        self._compartment_created_by = compartment_created_by

    @property
    def compartment_updated_by(self):
        """Gets the compartment_updated_by of this CompartmentModel.  # noqa: E501

          # noqa: E501

        :return: The compartment_updated_by of this CompartmentModel.  # noqa: E501
        :rtype: UsersModel
        """
        return self._compartment_updated_by

    @compartment_updated_by.setter
    def compartment_updated_by(self, compartment_updated_by):
        """Sets the compartment_updated_by of this CompartmentModel.

          # noqa: E501

        :param compartment_updated_by: The compartment_updated_by of this CompartmentModel.  # noqa: E501
        :type: UsersModel
        """

        self._compartment_updated_by = compartment_updated_by

    @property
    def compartment_created_at(self):
        """Gets the compartment_created_at of this CompartmentModel.  # noqa: E501

        created_at date time  # noqa: E501

        :return: The compartment_created_at of this CompartmentModel.  # noqa: E501
        :rtype: datetime
        """
        return self._compartment_created_at

    @compartment_created_at.setter
    def compartment_created_at(self, compartment_created_at):
        """Sets the compartment_created_at of this CompartmentModel.

        created_at date time  # noqa: E501

        :param compartment_created_at: The compartment_created_at of this CompartmentModel.  # noqa: E501
        :type: datetime
        """

        self._compartment_created_at = compartment_created_at

    @property
    def compartment_updated_at(self):
        """Gets the compartment_updated_at of this CompartmentModel.  # noqa: E501

        updated_at date time  # noqa: E501

        :return: The compartment_updated_at of this CompartmentModel.  # noqa: E501
        :rtype: datetime
        """
        return self._compartment_updated_at

    @compartment_updated_at.setter
    def compartment_updated_at(self, compartment_updated_at):
        """Sets the compartment_updated_at of this CompartmentModel.

        updated_at date time  # noqa: E501

        :param compartment_updated_at: The compartment_updated_at of this CompartmentModel.  # noqa: E501
        :type: datetime
        """

        self._compartment_updated_at = compartment_updated_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CompartmentModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CompartmentModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, CompartmentModel):
            return True

        return self.to_dict() != other.to_dict()
