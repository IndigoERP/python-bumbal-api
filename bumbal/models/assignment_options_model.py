# coding: utf-8

"""
    Bumbal Client Api

    Bumbal API documentation  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: gerb@bumbal.eu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from bumbal.configuration import Configuration


class AssignmentOptionsModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'include_activities': 'bool',
        'include_meta_data': 'bool',
        'include_links': 'bool',
        'include_files': 'bool',
        'include_tag_ids': 'bool',
        'include_tag_names': 'bool',
        'include_booking_account': 'bool',
        'include_party_name': 'bool',
        'include_record_info': 'bool',
        'include_record_object': 'bool'
    }

    attribute_map = {
        'include_activities': 'include_activities',
        'include_meta_data': 'include_meta_data',
        'include_links': 'include_links',
        'include_files': 'include_files',
        'include_tag_ids': 'include_tag_ids',
        'include_tag_names': 'include_tag_names',
        'include_booking_account': 'include_booking_account',
        'include_party_name': 'include_party_name',
        'include_record_info': 'include_record_info',
        'include_record_object': 'include_record_object'
    }

    def __init__(self, include_activities=None, include_meta_data=None, include_links=None, include_files=None, include_tag_ids=None, include_tag_names=None, include_booking_account=None, include_party_name=None, include_record_info=None, include_record_object=None, _configuration=None):  # noqa: E501
        """AssignmentOptionsModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._include_activities = None
        self._include_meta_data = None
        self._include_links = None
        self._include_files = None
        self._include_tag_ids = None
        self._include_tag_names = None
        self._include_booking_account = None
        self._include_party_name = None
        self._include_record_info = None
        self._include_record_object = None
        self.discriminator = None

        if include_activities is not None:
            self.include_activities = include_activities
        if include_meta_data is not None:
            self.include_meta_data = include_meta_data
        if include_links is not None:
            self.include_links = include_links
        if include_files is not None:
            self.include_files = include_files
        if include_tag_ids is not None:
            self.include_tag_ids = include_tag_ids
        if include_tag_names is not None:
            self.include_tag_names = include_tag_names
        if include_booking_account is not None:
            self.include_booking_account = include_booking_account
        if include_party_name is not None:
            self.include_party_name = include_party_name
        if include_record_info is not None:
            self.include_record_info = include_record_info
        if include_record_object is not None:
            self.include_record_object = include_record_object

    @property
    def include_activities(self):
        """Gets the include_activities of this AssignmentOptionsModel.  # noqa: E501

          # noqa: E501

        :return: The include_activities of this AssignmentOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_activities

    @include_activities.setter
    def include_activities(self, include_activities):
        """Sets the include_activities of this AssignmentOptionsModel.

          # noqa: E501

        :param include_activities: The include_activities of this AssignmentOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_activities = include_activities

    @property
    def include_meta_data(self):
        """Gets the include_meta_data of this AssignmentOptionsModel.  # noqa: E501

          # noqa: E501

        :return: The include_meta_data of this AssignmentOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_meta_data

    @include_meta_data.setter
    def include_meta_data(self, include_meta_data):
        """Sets the include_meta_data of this AssignmentOptionsModel.

          # noqa: E501

        :param include_meta_data: The include_meta_data of this AssignmentOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_meta_data = include_meta_data

    @property
    def include_links(self):
        """Gets the include_links of this AssignmentOptionsModel.  # noqa: E501

          # noqa: E501

        :return: The include_links of this AssignmentOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_links

    @include_links.setter
    def include_links(self, include_links):
        """Sets the include_links of this AssignmentOptionsModel.

          # noqa: E501

        :param include_links: The include_links of this AssignmentOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_links = include_links

    @property
    def include_files(self):
        """Gets the include_files of this AssignmentOptionsModel.  # noqa: E501

          # noqa: E501

        :return: The include_files of this AssignmentOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_files

    @include_files.setter
    def include_files(self, include_files):
        """Sets the include_files of this AssignmentOptionsModel.

          # noqa: E501

        :param include_files: The include_files of this AssignmentOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_files = include_files

    @property
    def include_tag_ids(self):
        """Gets the include_tag_ids of this AssignmentOptionsModel.  # noqa: E501

          # noqa: E501

        :return: The include_tag_ids of this AssignmentOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_tag_ids

    @include_tag_ids.setter
    def include_tag_ids(self, include_tag_ids):
        """Sets the include_tag_ids of this AssignmentOptionsModel.

          # noqa: E501

        :param include_tag_ids: The include_tag_ids of this AssignmentOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_tag_ids = include_tag_ids

    @property
    def include_tag_names(self):
        """Gets the include_tag_names of this AssignmentOptionsModel.  # noqa: E501

          # noqa: E501

        :return: The include_tag_names of this AssignmentOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_tag_names

    @include_tag_names.setter
    def include_tag_names(self, include_tag_names):
        """Sets the include_tag_names of this AssignmentOptionsModel.

          # noqa: E501

        :param include_tag_names: The include_tag_names of this AssignmentOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_tag_names = include_tag_names

    @property
    def include_booking_account(self):
        """Gets the include_booking_account of this AssignmentOptionsModel.  # noqa: E501

          # noqa: E501

        :return: The include_booking_account of this AssignmentOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_booking_account

    @include_booking_account.setter
    def include_booking_account(self, include_booking_account):
        """Sets the include_booking_account of this AssignmentOptionsModel.

          # noqa: E501

        :param include_booking_account: The include_booking_account of this AssignmentOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_booking_account = include_booking_account

    @property
    def include_party_name(self):
        """Gets the include_party_name of this AssignmentOptionsModel.  # noqa: E501

          # noqa: E501

        :return: The include_party_name of this AssignmentOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_party_name

    @include_party_name.setter
    def include_party_name(self, include_party_name):
        """Sets the include_party_name of this AssignmentOptionsModel.

          # noqa: E501

        :param include_party_name: The include_party_name of this AssignmentOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_party_name = include_party_name

    @property
    def include_record_info(self):
        """Gets the include_record_info of this AssignmentOptionsModel.  # noqa: E501

          # noqa: E501

        :return: The include_record_info of this AssignmentOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_record_info

    @include_record_info.setter
    def include_record_info(self, include_record_info):
        """Sets the include_record_info of this AssignmentOptionsModel.

          # noqa: E501

        :param include_record_info: The include_record_info of this AssignmentOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_record_info = include_record_info

    @property
    def include_record_object(self):
        """Gets the include_record_object of this AssignmentOptionsModel.  # noqa: E501

          # noqa: E501

        :return: The include_record_object of this AssignmentOptionsModel.  # noqa: E501
        :rtype: bool
        """
        return self._include_record_object

    @include_record_object.setter
    def include_record_object(self, include_record_object):
        """Sets the include_record_object of this AssignmentOptionsModel.

          # noqa: E501

        :param include_record_object: The include_record_object of this AssignmentOptionsModel.  # noqa: E501
        :type: bool
        """

        self._include_record_object = include_record_object

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AssignmentOptionsModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AssignmentOptionsModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AssignmentOptionsModel):
            return True

        return self.to_dict() != other.to_dict()
